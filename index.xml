<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://jumorap.github.io/showcase/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jumorap.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/iframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/iframe/</guid><description>p5 iframe shortcodes embed p5.js code within an iframe element. There are two p5 iframe shortcodes: p5-iframe and p5-global-iframe.
p5-iframe # {{&amp;lt; p5-iframe ver=&amp;#34;1.5.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;600&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Color relativity # Look at this brief explanation about what color relativity is.
p5-iframe markdown {{&amp;lt; p5-iframe sketch=&amp;#34;/showcase/sketches/colors.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/div/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/div/</guid><description>p5 div shortcodes embed p5.js code within a div element. There are two p5 div shortcodes: p5-div and p5-instance-div.
p5-div # {{&amp;lt; p5-div ver=&amp;#34;1.5.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Scintillating grid # Look at this and also this among many more references there are.
p5-div markdown {{&amp;lt; p5-div sketch=&amp;#34;/showcase/sketches/scintillating.</description></item><item><title>Creating a New Theme</title><link>https://jumorap.github.io/showcase/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://jumorap.github.io/showcase/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://jumorap.github.io/showcase/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://jumorap.github.io/showcase/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/color/</guid><description>Color # Exercise
Implement a color mapping application that helps people who are color blind see the colors around them.
Little Background: # Color blindness, also known as color vision deficiency, is a condition that affects the ability to distinguish colors. It is more common in men than in women and affects approximately 1 in 12 men and 1 in 200 women of Northern European descent. There are different types of color blindness, such as Protanopia, Deuteranopia, and Tritanopia, and they result from the absence or malfunction of certain types of cones in the eye that are responsible for color vision.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/depthPerception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/depthPerception/</guid><description>Depth Perception # Exercise Take advantage of monocular cues to implement a 2D sketch to trick the eye into perceiving a 3D scene. Solution # Implementation of Ebbinghaus illusion to use monocular cues to trick the eye into perceiving a 3D scene:
Code Implementation let x1, y1, flag, radio, button, a, x6, y6, x7, y7, y5, x5, y4, x4, y3, x3, y2, x2, z1, z2, z3, z4, z5, z6, z7, lineW, canvasWidth, canvasHeight, delta; canvasWidth = canvasHeight = 700; x1 = y1 = 150; z1 = z2 = z3 = z4 = z5 = z6 = z7 = 70; flag = 1; radio = 80 lineW = 20; delta = 0.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/machBands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/machBands/</guid><description>Mach Bands # Exercise
Develop a terrain visualization application. Check out the 3D terrain generation with Perlin noise coding train tutorial.
Solution # Implementation of a terrain visualization application in P5 that uses Perlin noise to generate a 3D terrain:
Code Implementation let terrain; let scl = 8; let cols, rows; let startX, startY; let rotX = -0.8; let rotY = 0; let canRotate = false; const DARK_BLUE = [0, 85, 255]; const MEDIUM_BLUE = [0, 110, 255]; const LIGHT_BLUE = [0, 100, 255]; const WHITE = [255, 255, 255]; const GREEN = [100, 180, 30]; const DARK_GREEN = [61, 150, 30]; const SUPER_DARK_GREEN = [61, 130, 61]; const BROWN = [79, 60, 46]; const MIN_HEIGHT_BLUE = -30; const MAX_HEIGHT_WHITE = 40; const MEDIUM_HEIGHT_BROWN = 30; const MAX_HEIGHT_GREEN = 25; const wMap = 800; const hMap = 800; function setup() { createCanvas(wMap, hMap, WEBGL); cols = floor(width / scl); rows = floor(height / scl); terrain = generateTerrain(cols, rows); } function draw() { background(0); if (canRotate) { // Calculate the rotation based on the mouse movement let deltaX = mouseX - startX; let deltaY = mouseY - startY; rotY += deltaX * 0.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/masking/</guid><description>Masking # Exercise
Implement a kinegram and some moiré patterns which are close related visual phenomena to masking.
Little Background: # Kinegrams are two-dimensional images that appear to move or animate when viewed from different angles or under different lighting conditions. They are typically created by printing or engraving a pattern onto a flat surface and then placing a transparent overlay on top of the pattern that contains a second, complementary pattern.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/SpatialCoherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/SpatialCoherence/</guid><description>Spatial Coherence # Exercise
Spatial coherence is the visual phenomenon present all across nature whereby the perceived colors of two given points within a region of interest tend to vary more according to their relative distance.
Exercise Implement a pixelator video application and perform a benchmark of the results (color avg vs spatial coherence). How would you assess the visual quality of the results?
Solution # Implemention of a pixelator video application:</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/video/</guid><description>Proposed Exercises Video # Overview # In this video we will explore some of the key concepts in visual perception. We will discuss how our eyes and brain work together to create a visual experience of the world around us. We will also discuss some of the optical illusions that can trick our visual system.
Color is a fundamental property of light and our ability to perceive different colors is essential to our visual experience of the world.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/coloring/</guid><description>Coloring # Exercises
Figure it out the js code for color blending sketches. Implement other blending modes. Take this reference as starting point. Little background # Color blending refers to the process of combining two or more colors together to create new colors or achieve a desired visual effect. It is commonly used in various art forms, design applications, and digital image editing. By blending colors, you can create smooth transitions, gradients, or harmonious color schemes.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/imageProcessing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/imageProcessing/</guid><description>Image Processing # Exercise Implement an image / video processing app supporting different masks, including other kernel sizes different than 3x3, and:
A region-of-interest base tool to selectively apply a given mask.Hint: circular regions around the mouse pointer are handy and quite simple to implement by means of glsl distance. A magnifier tool. Requires a bit of research. For instance, look for it in shadertoy. Integrate luma and other coloring brightness tools.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/postEffects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/postEffects/</guid><description>Post Effects # Exercises
Implement some posteffects you find interesting. Solution # The solution implemented various post effects to enhance the visual appearance of the rendered image. These effects were chosen based on personal interest and were designed to add visual flair and improve the overall aesthetic quality of the output.
postEffects.js let lumaShader, src, img_src, glitchCheck, textureTintingText, glitchSlider, glitchEffectBool, lightLeaksCheck, lightLeaksSlider, lightLeaksText, lightLeaksBool, multiplyCheck, multiplySlider, multiplyText, multiplyEffectBool, threeDCheck, threeDSlider, threeDText, threeDEffectBool, blurCheck, blurSlider, blurText, blurEffectBool, pixelCheck, pixelSlider, pixelText, pixelEffectBool; function preload() { lumaShader = readShader(&amp;#39;/showcase/sketches/shaders/postEffect.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/texturing/</guid><description>Texturing # Exercises
Implement other coloring brightness tools such as HSV value V, HSL lightness L or Component average. Implement texture tinting by mixing color and texel interpolated data. Solution # The solution implemented additional coloring brightness tools including HSV value V, HSL lightness L, and Component average. It also added texture tinting by mixing color and texel interpolated data.
texturing.js var Tree=function(t){const e={LIBRARY:&amp;#34;p5.treegl&amp;#34;,VERSION:&amp;#34;0.6.2&amp;#34;,HOMEPAGE:&amp;#34;https://github.com/VisualComputing/p5.treegl&amp;#34;};Object.freeze(e);return t??={},t.INFO=e,t.NONE=0,t.X=1,t.Y=2,t.Z=4,t._X=8,t._Y=16,t._Z=32,t.LABELS=64,t.SOLID=0,t.DOTS=1,t.SQUARE=0,t.CIRCLE=1,t.PROJECTION=2,t.NEAR=1,t.FAR=2,t.LEFT=4,t.RIGHT=8,t.BOTTOM=16,t.TOP=32,t.BODY=64,t.INVISIBLE=0,t.VISIBLE=1,t.SEMIVISIBLE=2,t.WORLD=&amp;#34;WORLD&amp;#34;,t.EYE=&amp;#34;EYE&amp;#34;,t.NDC=&amp;#34;NDC&amp;#34;,t.SCREEN=&amp;#34;SCREEN&amp;#34;,t.MODEL=&amp;#34;MODEL&amp;#34;,t.ORIGIN=[0,0,0],t.i=[1,0,0],t.j=[0,1,0],t.k=[0,0,1],t._i=[-1,0,0],t._j=[0,-1,0],t._k=[0,0,-1],t.lowp=0,t.mediump=1,t.highp=2,t.pmvMatrix=1,t.pMatrix=2,t.mvMatrix=4,t.nMatrix=8,t.color4=1,t.texcoords2=2,t.normal3=4,t.position2=8,t.position3=16,t.position4=32,t}(Tree);console.log(Tree.INFO),p5.Matrix.prototype.mult3=function(t){if(void 0!==this.mat3)return new p5.Vector(this.mat3[0]*t.x+this.mat3[3]*t.y+this.mat3[6]*t.z,this.mat3[1]*t.x+this.mat3[4]*t.y+this.mat3[7]*t.z,this.mat3[2]*t.x+this.mat3[5]*t.y+this.mat3[8]*t.z);console.error(&amp;#34;mult3 only works with mat3&amp;#34;)},p5.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jleonro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jleonro/</guid><description>Jahel Santiago Leon # WHOAMI # Hey there! My name&amp;rsquo;s Jahel and I&amp;rsquo;m a software developer from Colombia. I&amp;rsquo;m a total anime fanatic and love to spend my free time binge-watching my favorite shows. But when I&amp;rsquo;m not glued to the screen, you can usually find me tinkering away on some new coding project.
In between my coding sessions and anime binges, I also enjoy indulging in some seriously trashy food.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jumorap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jumorap/</guid><description>Juan Camilo Mora Pulido # WHOAMI # Hello, my name is Juan, and I&amp;rsquo;m a software developer from Colombia. I&amp;rsquo;m a passionate individual who loves all things technology. As someone who is always seeking new knowledge and challenges, I find myself constantly learning and growing in my field.
When I&amp;rsquo;m not working on coding projects, I enjoy spending my free time exploring my other interests. I&amp;rsquo;m a big fan of the cinema and enjoy immersing myself in different genres of film.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/ycuervob/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/ycuervob/</guid><description>Yeison Cuervo Basurto # WHOAMI # Hello! I am a computer systems engineering student passionate about constantly learning and applying new knowledge in areas such as cloud computing, back-end, and machine learning. I consider myself a proactive, organized, and responsible person, and I enjoy working in a team and learning from my peers.
I am always willing to learn and adapt to any challenge that arises, and I like to stay updated on the latest technological trends.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/buttons/</guid><description> Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/details/</guid><description> Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip; Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/hints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/hints/</guid><description>Hints # Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example # Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt; katex [display] [class=&amp;#34;text-center&amp;#34;] &amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt; /katex &amp;gt;}} \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt; mermaid [class=&amp;#34;text-center&amp;#34;]&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item></channel></rss>