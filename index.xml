<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://jumorap.github.io/showcase/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jumorap.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/iframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/iframe/</guid><description>p5 iframe shortcodes embed p5.js code within an iframe element. There are two p5 iframe shortcodes: p5-iframe and p5-global-iframe.
p5-iframe # {{&amp;lt; p5-iframe ver=&amp;#34;1.5.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;600&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Color relativity # Look at this brief explanation about what color relativity is.
p5-iframe markdown {{&amp;lt; p5-iframe sketch=&amp;#34;/showcase/sketches/colors.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/div/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/p5/div/</guid><description>p5 div shortcodes embed p5.js code within a div element. There are two p5 div shortcodes: p5-div and p5-instance-div.
p5-div # {{&amp;lt; p5-div ver=&amp;#34;1.5.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Scintillating grid # Look at this and also this among many more references there are.
p5-div markdown {{&amp;lt; p5-div sketch=&amp;#34;/showcase/sketches/scintillating.</description></item><item><title>Creating a New Theme</title><link>https://jumorap.github.io/showcase/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://jumorap.github.io/showcase/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://jumorap.github.io/showcase/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://jumorap.github.io/showcase/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/color/</guid><description>Color # Exercise
Implement a color mapping application that helps people who are color blind see the colors around them.
Solution # Here&amp;rsquo;s an implementation of a color mapping application in P5 that can help people who are color blind see the colors around them:
Code Implementation // Define a color map for color blindness correction let colorMapArr = [ [[0, 0, 0], &amp;#34;black&amp;#34;], [[255, 255, 255], &amp;#34;white&amp;#34;], [[128, 128, 128], &amp;#34;gray&amp;#34;], [[230, 25, 75], &amp;#34;red&amp;#34;], [[60, 180, 75], &amp;#34;green&amp;#34;], [[0, 0, 255], &amp;#34;blue&amp;#34;], [[255, 225, 25], &amp;#34;yellow&amp;#34;], [[145, 30, 180], &amp;#34;purple&amp;#34;], [[255, 165, 0], &amp;#34;orange&amp;#34;], [[255, 192, 203], &amp;#34;pink&amp;#34;], [[165, 42, 42], &amp;#34;brown&amp;#34;], [[0, 128, 128], &amp;#34;teal&amp;#34;], [[230, 190, 255], &amp;#34;lavender&amp;#34;], [[128, 0, 0], &amp;#34;maroon&amp;#34;], [[170, 255, 195], &amp;#34;mint&amp;#34;], [[128, 128, 0], &amp;#34;olive&amp;#34;], [[255, 215, 180], &amp;#34;peach&amp;#34;], [[0, 0, 128], &amp;#34;navy&amp;#34;], [[0, 255, 255], &amp;#34;cyan&amp;#34;], [[255, 0, 255], &amp;#34;magenta&amp;#34;], [[255, 250, 200], &amp;#34;beige&amp;#34;], [[64, 224, 208], &amp;#34;turquoise&amp;#34;], [[255, 215, 0], &amp;#34;gold&amp;#34;], [[192, 192, 192], &amp;#34;silver&amp;#34;], [[205, 127, 50], &amp;#34;bronze&amp;#34;], [[181, 166, 66], &amp;#34;brass&amp;#34;], [[184, 115, 51], &amp;#34;copper&amp;#34;], [[170, 69, 69], &amp;#34;pewter&amp;#34;], [[224, 17, 95], &amp;#34;ruby&amp;#34;], [[8, 37, 103], &amp;#34;sapphire&amp;#34;], [[80, 200, 120], &amp;#34;emerald&amp;#34;], [[153, 50, 204], &amp;#34;amethyst&amp;#34;], [[194, 184, 9], &amp;#34;citrine&amp;#34;], [[204, 198, 0], &amp;#34;topaz&amp;#34;], [[57, 204, 204], &amp;#34;peridot&amp;#34;], [[135, 67, 34], &amp;#34;aquamarine&amp;#34;], [[162, 54, 54], &amp;#34;garnet&amp;#34;], [[255, 188, 215], &amp;#34;opal&amp;#34;], [[53, 56, 57], &amp;#34;onyx&amp;#34;], [[240, 248, 255], &amp;#34;pearl&amp;#34;], [[255, 127, 80], &amp;#34;coral&amp;#34;], [[255, 191, 0], &amp;#34;amber&amp;#34;] ]; //See: https://gist.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/depthPerception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/depthPerception/</guid><description>Depth Perception # Exercise Take advantage of monocular cues to implement a 2D sketch to trick the eye into perceiving a 3D scene. Solution # Implementation of Ebbinghaus illusion to use monocular cues to trick the eye into perceiving a 3D scene:
Code Implementation let x1, y1, flag, radio, button, a, x6, y6, x7, y7, y5, x5, y4, x4, y3, x3, y2, x2, z1, z2, z3, z4, z5, z6, z7, lineW, canvasWidth, canvasHeight, delta; canvasWidth = canvasHeight = 700; x1 = y1 = 150; z1 = z2 = z3 = z4 = z5 = z6 = z7 = 70; flag = 1; radio = 80 lineW = 20; delta = 0.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/machBands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/machBands/</guid><description>Mach Bands # Exercise
Develop a terrain visualization application. Check out the 3D terrain generation with Perlin noise coding train tutorial.
Solution # Implementation of a terrain visualization application in P5 that uses Perlin noise to generate a 3D terrain:
Code Implementation let terrain; let scl = 8; let cols, rows; let startX, startY; let rotX = -0.8; let rotY = 0; let canRotate = false; const DARK_BLUE = [0, 85, 255]; const MEDIUM_BLUE = [0, 110, 255]; const LIGHT_BLUE = [0, 100, 255]; const WHITE = [255, 255, 255]; const GREEN = [100, 180, 30]; const DARK_GREEN = [61, 150, 30]; const SUPER_DARK_GREEN = [61, 130, 61]; const BROWN = [79, 60, 46]; const MIN_HEIGHT_BLUE = -30; const MAX_HEIGHT_WHITE = 40; const MEDIUM_HEIGHT_BROWN = 30; const MAX_HEIGHT_GREEN = 25; const wMap = 800; const hMap = 800; function setup() { createCanvas(wMap, hMap, WEBGL); cols = floor(width / scl); rows = floor(height / scl); terrain = generateTerrain(cols, rows); } function draw() { background(0); if (canRotate) { // Calculate the rotation based on the mouse movement let deltaX = mouseX - startX; let deltaY = mouseY - startY; rotY += deltaX * 0.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/masking/</guid><description>Masking # Exercise
Implement a kinegram and some moiré patterns which are close related visual phenomena to masking.
Solution: # Code Implementation let pic let pic2 let x = 0 let canvassizex = 680; let canvassizey = 575; let imagesize = canvassizex / 2; let tileCount = 0; let mycolor = [0, 0, 0]; let speed = 1; let input; let button; function preload() { pic = loadImage(&amp;#39;/showcase/sketches/kinegram.jpg&amp;#39;); input = createInput(); } function setup() { createCanvas(canvassizex, canvassizey); typeSelect = createRadio(); typeSelect.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/SpatialCoherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_1/SpatialCoherence/</guid><description>Mach Bands # Exercise
Temporal coherence is the visual phenomenon present all across nature whereby the perceived color of a given point within a region of interest tend to vary more according to the elapsed time passed between two given moments.
Implement an animation with keyframes using the nub library for Processing (Java).
Solution # Implementation of an animation with keyframes using the nub library for Processing (Java):
Code Implementation let videoFile; let pixelateType = null; let tileCount = 10; function setup() { createCanvas(800, 400); // create a file input element and position it on the canvas const fileInput = createFileInput(handleFile); fileInput.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jleonro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jleonro/</guid><description>Jahel Santiago Leon # WHOAMI # Hey there! My name&amp;rsquo;s Jahel and I&amp;rsquo;m a software developer from Colombia. I&amp;rsquo;m a total anime fanatic and love to spend my free time binge-watching my favorite shows. But when I&amp;rsquo;m not glued to the screen, you can usually find me tinkering away on some new coding project.
In between my coding sessions and anime binges, I also enjoy indulging in some seriously trashy food.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jumorap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/jumorap/</guid><description>Juan Camilo Mora Pulido # WHOAMI # Hello, my name is Juan, and I&amp;rsquo;m a software developer from Colombia. I&amp;rsquo;m a passionate individual who loves all things technology. As someone who is always seeking new knowledge and challenges, I find myself constantly learning and growing in my field.
When I&amp;rsquo;m not working on coding projects, I enjoy spending my free time exploring my other interests. I&amp;rsquo;m a big fan of the cinema and enjoy immersing myself in different genres of film.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/ycuervob/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/introducingMyself/ycuervob/</guid><description>Yeison Cuervo Basurto # WHOAMI # Hello! I am a computer systems engineering student passionate about constantly learning and applying new knowledge in areas such as cloud computing, back-end, and machine learning. I consider myself a proactive, organized, and responsible person, and I enjoy working in a team and learning from my peers.
I am always willing to learn and adapt to any challenge that arises, and I like to stay updated on the latest technological trends.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/buttons/</guid><description> Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/details/</guid><description> Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip; Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/hints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/hints/</guid><description>Hints # Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example # Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt; katex [display] [class=&amp;#34;text-center&amp;#34;] &amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt; /katex &amp;gt;}} \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt; mermaid [class=&amp;#34;text-center&amp;#34;]&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/tutoriales/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item></channel></rss>