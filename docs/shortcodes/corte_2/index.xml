<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jumorap.github.io/showcase/docs/shortcodes/corte_2/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/postEffects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/postEffects/</guid><description>Post Effects # Exercises
Implement some posteffects you find interesting. Solution # The solution implemented various post effects to enhance the visual appearance of the rendered image. These effects were chosen based on personal interest and were designed to add visual flair and improve the overall aesthetic quality of the output.
texturing.js let lumaShader, src, img_src, glitchCheck, textureTintingText, glitchSlider, glitchEffectBool, lightLeaksCheck, lightLeaksSlider, lightLeaksText, lightLeaksBool, multiplyCheck, multiplySlider, multiplyText, multiplyEffectBool, threeDCheck, threeDSlider, threeDText, threeDEffectBool, blurCheck, blurSlider, blurText, blurEffectBool, pixelCheck, pixelSlider, pixelText, pixelEffectBool; function preload() { lumaShader = readShader(&amp;#39;/showcase/sketches/shaders/postEffect.</description></item><item><title/><link>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jumorap.github.io/showcase/docs/shortcodes/corte_2/texturing/</guid><description>Texturing # Exercises
Implement other coloring brightness tools such as HSV value V, HSL lightness L or Component average. Implement texture tinting by mixing color and texel interpolated data. Solution # The solution implemented additional coloring brightness tools including HSV value V, HSL lightness L, and Component average. It also added texture tinting by mixing color and texel interpolated data.
texturing.js var Tree=function(t){const e={LIBRARY:&amp;#34;p5.treegl&amp;#34;,VERSION:&amp;#34;0.6.2&amp;#34;,HOMEPAGE:&amp;#34;https://github.com/VisualComputing/p5.treegl&amp;#34;};Object.freeze(e);return t??={},t.INFO=e,t.NONE=0,t.X=1,t.Y=2,t.Z=4,t._X=8,t._Y=16,t._Z=32,t.LABELS=64,t.SOLID=0,t.DOTS=1,t.SQUARE=0,t.CIRCLE=1,t.PROJECTION=2,t.NEAR=1,t.FAR=2,t.LEFT=4,t.RIGHT=8,t.BOTTOM=16,t.TOP=32,t.BODY=64,t.INVISIBLE=0,t.VISIBLE=1,t.SEMIVISIBLE=2,t.WORLD=&amp;#34;WORLD&amp;#34;,t.EYE=&amp;#34;EYE&amp;#34;,t.NDC=&amp;#34;NDC&amp;#34;,t.SCREEN=&amp;#34;SCREEN&amp;#34;,t.MODEL=&amp;#34;MODEL&amp;#34;,t.ORIGIN=[0,0,0],t.i=[1,0,0],t.j=[0,1,0],t.k=[0,0,1],t._i=[-1,0,0],t._j=[0,-1,0],t._k=[0,0,-1],t.lowp=0,t.mediump=1,t.highp=2,t.pmvMatrix=1,t.pMatrix=2,t.mvMatrix=4,t.nMatrix=8,t.color4=1,t.texcoords2=2,t.normal3=4,t.position2=8,t.position3=16,t.position4=32,t}(Tree);console.log(Tree.INFO),p5.Matrix.prototype.mult3=function(t){if(void 0!==this.mat3)return new p5.Vector(this.mat3[0]*t.x+this.mat3[3]*t.y+this.mat3[6]*t.z,this.mat3[1]*t.x+this.mat3[4]*t.y+this.mat3[7]*t.z,this.mat3[2]*t.x+this.mat3[5]*t.y+this.mat3[8]*t.z);console.error(&amp;#34;mult3 only works with mat3&amp;#34;)},p5.</description></item></channel></rss>